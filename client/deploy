#!/bin/bash

echo "update and install"
sudo apt-get update >/dev/null 2>&1
sudo apt-get install -y nginx >/dev/null
sudo apt-get install -y nodejs npm >/dev/null
# avoid timeout
npm config set registry http://registry.npm.taobao.org
npm install -g html-minifier uglify-js >/dev/null

echo "create project dir"
homeDir=/var/www/one_click_client
sudo rm -rf $homeDir && sudo mkdir -p $homeDir
cd $homeDir

echo "download sources"
# compress and mangle
__HASH__=$(date +%Y%m%d%H%M%S)
source_compress() {
    # html | css
    html_compress() {
        sudo html-minifier $1 -o $2 \
        --collapse-whitespace --remove-comments --remove-optional-tags \
        --remove-redundant-attributes --use-short-doctype --remove-tag-whitespace \
        --remove-empty-attributes --remove-script-type-attributes --remove-style-link-type-attributes \
        --minify-css true --minify-js true
    }
    # js
    js_c_m() {
        sudo uglifyjs $1 -o $2 --compress --mangle
    }
    inputfile=$1
    outputfile=$([ -n "$2" ] && echo "$2" || echo "$1")
    case "$1" in
        *.html|*.css) html_compress $inputfile $outputfile;;
        *.js) js_c_m $inputfile $outputfile;;
    esac
    # clear old one
    if [ "$outputfile" != "$inputfile" ]; then
        sudo rm -f $inputfile
    fi
}

wget -q https://raw.githubusercontent.com/minximenes/renrengpt/main/client/instance.html
# page link
sed -i 's/.\/privacy.html/\/privacy/' ./instance.html
sed -i 's/.\/support.html/\/support/' ./instance.html
sed -i 's/.\/terms.html/\/terms/' ./instance.html
source_compress instance.html
sudo sed -i "s/\/instance.js/\/$__HASH__.instance.js/" instance.html
sudo sed -i "s/\/instance.css/\/$__HASH__.instance.css/" instance.html

wget -q https://raw.githubusercontent.com/minximenes/renrengpt/main/client/privacy.html
source_compress privacy.html
sudo sed -i "s/\/footer.js/\/$__HASH__.footer.js/" privacy.html

wget -q https://raw.githubusercontent.com/minximenes/renrengpt/main/client/support.html
source_compress support.html
sudo sed -i "s/\/footer.js/\/$__HASH__.footer.js/" support.html
sudo sed -i "s/\/footer.css/\/$__HASH__.footer.css/" support.html

wget -q https://raw.githubusercontent.com/minximenes/renrengpt/main/client/terms.html
source_compress terms.html
sudo sed -i "s/\/footer.js/\/$__HASH__.footer.js/" terms.html

sudo mkdir -p js && cd js
wget -q https://raw.githubusercontent.com/minximenes/renrengpt/main/client/js/instance.js
# api url
sed -i "s/http:\/\/127.0.0.1:5000/https:\/\/renrengpt.cn\/api/" instance.js
source_compress instance.js $__HASH__.instance.js

wget -q https://raw.githubusercontent.com/minximenes/renrengpt/main/client/js/footer.js
# page link
sed -i 's/.\/instance.html/\//' footer.js
source_compress footer.js $__HASH__.footer.js
cd ..

sudo mkdir -p css && cd css
wget -q https://raw.githubusercontent.com/minximenes/renrengpt/main/client/css/instance.css
source_compress instance.css $__HASH__.instance.css

wget -q https://raw.githubusercontent.com/minximenes/renrengpt/main/client/css/footer.css
source_compress footer.css $__HASH__.footer.css
cd ..

sudo mkdir -p img && cd img
wget -q https://raw.githubusercontent.com/minximenes/renrengpt/main/client/img/favicon.svg
cd ..

echo "configurate nginx"
# nginx.conf
sudo cp /etc/nginx/nginx.conf /etc/nginx/nginx.conf.origin
sudo sed -i 's/user www-data/user root/' /etc/nginx/nginx.conf
# sites-available
cat <<'EOF' > tmp
server {
    listen 80;
    server_name renrengpt.cn
                www.renrengpt.cn;
    rewrite ^/(.*) https://renrengpt.cn/$1 permanent;
}
server {
    listen 443;
    server_name www.renrengpt.cn;
    rewrite ^/(.*) https://renrengpt.cn/$1 permanent;
}

limit_req_zone $binary_remote_addr zone=mylimit:10m rate=2r/s;
server {
    listen 443 default_server ssl;
    server_name renrengpt.cn;

    # ssl
    ssl_certificate /etc/nginx/cert/renrengpt.cn.pem;
    ssl_certificate_key /etc/nginx/cert/renrengpt.cn.key;

    ssl_session_cache shared:SSL:1m;
    ssl_session_timeout 5m;

    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
    ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3;

    ssl_prefer_server_ciphers on;

    # addr
    add_header Cache-Control no-store;
    location / {
        root /var/www/one_click_client;
        index instance.html;
    }
    location /privacy {
        alias /var/www/one_click_client;
        index privacy.html;
    }
    location /support {
        alias /var/www/one_click_client;
        index support.html;
    }
    location /terms {
        alias /var/www/one_click_client;
        index terms.html;
    }

    # reverse proxy
    location /api {
        rewrite ^/api/?(.*) /$1 break;
        proxy_pass http://127.0.0.1:5000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 150s;

        limit_req zone=mylimit burst=5;
    }
}
EOF
sudo mv tmp /etc/nginx/sites-available/one_click_client
sudo ln -sf /etc/nginx/sites-available/one_click_client /etc/nginx/sites-enabled/one_click_client

sudo service nginx restart
sudo service nginx status

echo "configurate logrotate"
# log
sudo sed -i 's/www-data/root/' /etc/logrotate.d/nginx
sudo logrotate /etc/logrotate.d/nginx

echo "end"
